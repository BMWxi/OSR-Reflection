
type TReflectWidget = type(TData);

procedure TReflectWidget.GetChild(ContainerIndex, ChildIndex: Integer);
begin
  Self.ObjRef := Reflect.Smart.GetFieldArray2DObject(0, Client_GetWidgets,
    ContainerIndex, ChildIndex);
end;

function TReflectWidget.GetParent(ParentID: Integer): Boolean;
begin
  if Result := not ParentID >= 0 then
    Self.GetChild(ParentID shr 16, ParentID and $FFFF);
end;

procedure TReflectWidget.Free;
begin
  Reflect.Smart.FreeObject(Self.ObjRef);
end;

function TReflectWidget.ValidChild(ContainerIndex, ChildIndex: Integer): Boolean;
var
  ChildRef: SmartObj;
begin
  ChildRef.GetFieldArray2DObject(0, Client_GetWidgets, ContainerIndex, ChildIndex);
  Result := ChildRef.ObjRef > 0;
  ChildRef.Free;
end;

function TReflectWidget.HasGrandChild: Boolean;
begin
  Result := Reflect.Smart.GetArraySize(Self.ObjRef, Widget_Children, 0) > 0;
end;

procedure TReflectWidget.GetGrandChild(Child: TReflectWidget; Index: Integer);
begin
  Self.ObjRef := Reflect.Smart.GetFieldArrayObject(Child.ObjRef,
    Widget_Children, Index);
end;

function TReflectWidget.GetText: String;
begin
  Result := Reflect.Smart.GetFieldString(Self.ObjRef, Widget_GetText);
end;

function TReflectWidget.GetItemID: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_ItemID);
end;

function TReflectWidget.GetItemStackSizes: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_ItemAmount);
end;

function TReflectWidget.GetWidgetID: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_WidgetID);
end;

function TReflectWidget.GetRelativeX: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_RelativeX);
end;

function TReflectWidget.GetRelativeY: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_RelativeY);
end;

function TReflectWidget.GetParentWidgetID: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_ParentWidgetID);
end;

function TReflectWidget.GetWidth: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_Width);
end;

function TReflectWidget.GetHeight: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_Height);
end;

function TReflectWidget.GetBoundsIndex: Integer;
begin
  Result := Reflect.Smart.GetFieldInt(Self.ObjRef, Widget_BoundsIndex);
end;

function TReflectWidget.GetX: Integer;
var
  ParentWidget: TReflectWidget;
begin
  Result := Self.GetRelativeX;
  if ParentWidget.GetParent(Self.GetParentWidgetID) then
  begin
    Inc(Result, ParentWidget.GetX);
    ParentWidget.Free;
  end
  else if Self.GetBoundsIndex >= 0 then
    Inc(Result, Reflect.Smart.GetFieldArrayInt(0, Client_WidgetXPositions,
      Self.GetBoundsIndex));
end;

function TReflectWidget.GetY: Integer;
var
  ParentWidget: TReflectWidget;
begin
  Result := Self.GetRelativeY;
  if ParentWidget.GetParent(Self.GetParentWidgetID) then
  begin
    Inc(Result, ParentWidget.GetY);
    ParentWidget.Free;
  end
  else if Self.GetBoundsIndex >= 0 then
    Inc(Reflect.Smart.GetFieldArrayInt(0, Client_WidgetYPositions,
      Self.GetBoundsIndex));
end;
