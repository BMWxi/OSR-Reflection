{$DEFINE REFLECTION}

const
  IncludeRevision = 7;
  SubRev = 1;
  R_MAJOR = 0;
  R_MINOR = 1;
{$i AeroLib/reflection/lib/internal/Includes.simba}

procedure TReflectionInternals.Warn(Message: String; warnType: Integer = R_MINOR);
var
  S : String;
begin
  case WarnType of
    R_MAJOR : S := 'Major';
    R_MINOR : S := 'Warn';
  end;
  writeLn('[' + S + ']' + ' [Reflection error] ' + Message);
  if warnType = R_MAJOR then
    terminateScript;
  Wait(2000);
end;

procedure TReflectionInternals.Status(Message: String);
begin
  writeLn('[Status]' + ' [Reflection] ' + Message);
end;

procedure TReflectionInternals.HooksValid;
begin
  if MouseSpeed = 0 then
    Reflect.Internals.Warn(
      'It appears InitAL; is below SetupReflection in current script', R_MAJOR);
  if ((Reflect.Internals.GetLoginState < 10) or
      (Reflect.Internals.GetLoginState > 30)) then
    Reflect.Internals.Warn(
      'Hooks are outdated.  No need to post about it, we are currently working on it.', R_MAJOR);
end;

procedure TReflectionInternals.UpdateHooks;
var
  OnlineVersion, NewFileName: string;
  NewFile: Integer
begin
  OnlineVersion := GetPage('http://pastebin.com/raw.php?i=wVLqqCp6');
  OnlineVersion := Between('hookrev = ''', '''', OnlineVersion);
  if (Trim(OnlineVersion) > ReflectionRevision) then
  begin
    WriteLn('Hook update available');
    try
      NewFileName := IncludePath + 'AeroLib\reflection\lib\internal\' + 'Hooks.simba';
      NewFile := Rewritefile(NewFileName, true);
      WriteFileString(NewFile, GetPage('http://pastebin.com/raw.php?i=5Ncz16bR'));
      WriteLn('Successfully updated '+ NewFileName);
    except
        Reflect.Internals.Warn('Failed Updated Hooks', R_MAJOR);
    finally
      CloseFile(NewFile);
      WriteLn('Reflection update completed.');
      writeLn('Please restart script.');
      TerminateScript;
    end;
  end;
end;

procedure TReflectionInternals.CheckIncludeUpdate;
var
  Full, TempRev, TempSubRev: string;
  NewFile: Integer
begin
  Full := GetPage('http://pastebin.com/raw.php?i=wVLqqCp6');
  TempRev := Between('includerev = ''', '''', Full);
  TempSubRev := Between('includesubrev = ''', '''', Full);
  if StrToInt(TempRev) > IncludeRevision then
    Reflect.Internals.Warn('Major Reflection update, please update');
  if StrToInt(TempSubRev) > SubRev then
    Reflect.Internals.Warn('Minor Reflection update, please update');
end;

procedure setupReflection;
begin
  Reflect.Internals.UpdateHooks;
  Reflect.Internals.CheckIncludeUpdate;
  Reflect.Internals.HooksValid;
  Reflect.Internals.SetupCurves;
  Writeln('Reflection succesfully setup!');
end;
