{$DEFINE REFLECTION}

const
  IncludeRevision = 6;
  SubRev = 0;
  R_MAJOR = 0;
  R_MINOR = 1;
{$i AeroLib/reflection/lib/internal/Includes.simba}

procedure TReflectionInternals.Warn(Message: String; warnType: Integer = R_MINOR);
var
  S : String;
begin
  case WarnType of
    R_MAJOR : S := 'Major';
    R_MINOR : S := 'Warn';
  end;
  WriteLn('[' + S + ']' + ' [Reflection error] ' + Message);
  if warnType = R_MAJOR then
    terminateScript;
  Wait(2000);
end;

procedure TReflectionInternals.Status(Message: String);
begin
  WriteLn('[Status]' + ' [Reflection] ' + Message);
end;

procedure TReflectionInternals.HooksValid;
begin
  if MouseSpeed = 0 then
    Reflect.Internals.Warn(
      'It appears InitAL; is below SetupReflection in current script', R_MAJOR);
  if ((Reflect.Internals.GetLoginState < 10) or
      (Reflect.Internals.GetLoginState > 30)) then
    Reflect.Internals.Warn(
      'Hooks are outdated.  No need to post about it, we are currently working on it.', R_MAJOR);
end;

procedure TReflectionInternals.UpdateHooks;
var
  OnlineVersion, NewFileName: string;
  NewFile: Integer
begin
  OnlineVersion := Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSR-Reflection/master/lib/internal/updating/Update.txt');
  OnlineVersion := Between('hookrev = ''', '''', OnlineVersion);
  if (Trim(OnlineVersion) > ReflectionRevision) then
  begin
    Reflect.Internals.Status('Hook update available!');
    try
      NewFileName := IncludePath + 'AeroLib\reflection\lib\internal\' + 'Hooks.simba';
      NewFile := Rewritefile(NewFileName, true);
      WriteFileString(NewFile, Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSR-Reflection/master/lib/internal/Hooks.simba'));
    except
        Reflect.Internals.Warn('Failed Updated Hooks', R_MAJOR);
    finally
      CloseFile(NewFile);
      Reflect.Internals.Status('Hook update completed.');
      Reflect.Internals.Status('Please restart script..');
      TerminateScript;
    end;
  end;
end;

function TReflectionInternals.CheckIncludeUpdate: Boolean;
var
  Full, TempRev, TempSubRev: string;
  NewFile: Integer
begin
  Full := Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSR-Reflection/master/lib/internal/updating/Update.txt');
  TempRev := Between('includerev = ''', '''', Full);
  TempSubRev := Between('includesubrev = ''', '''', Full);
  if (StrToInt(TempRev) > IncludeRevision) or StrToInt(TempSubRev) > SubRev then
    begin
      Reflect.Internals.Warn('Reflection Update Available');
      Result := True;
    end;
end;

  {*Credit: Krazy_Meerkat*}
procedure TReflectionInternals.CreateNewFiles;
var
  NewFile, I, E: Integer;
  NewFileName, DirectoryName: string;
  Multi, Multi2: TStringArray;
  Toggle: Boolean;
begin
  NewFileName:= Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSR-Reflection/master/lib/internal/updating/Files.txt');
  Multi:= MultiBetween(NewFileName, '(', ')');
  for i:= 0 to high(Multi) do
  begin
    if not(Toggle) then
    begin
      NewFileName := IncludePath + 'AeroLib\' + Multi[I];
      Multi2:= MultiBetween(Multi[I], '\', '\');
      DirectoryName := IncludePath + 'AeroLib\reflection';
      for E := 0 to High(Multi2) do
      begin
        DirectoryName := DirectoryName + '\' + Multi2[E];
        if not(DirectoryExists(DirectoryName)) then
          CreateDirectory(DirectoryName);
      end;
      Toggle:= True;
    end else
    begin
      if not(FileExists(NewFileName)) then
      begin
        try
          NewFile := CreateFile(NewFileName);
          CloseFile(NewFile);
          NewFile := Rewritefile(NewFileName, true);
          WriteFileString(NewFile, Reflect.Internals.GetPage(Multi[I]));
          Reflect.Internals.Status('Added new file ' + NewFileName);
        except
          Reflect.Internals.Warn('Fatal error writing to ' + NewFileName, R_MAJOR);
        finally
          CloseFile(NewFile);
        end;
      end;
      Toggle:= False;
    end;
  end;
end;

  {*Credit: Krazy_Meerkat*}
procedure TReflectionInternals.DeleteOldFiles;
var
  OldFileName: string;
  I: Integer;
  Multi: TStringArray;
begin
  OldFileName:= Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSR-Reflection/master/lib/internal/updating/Removed%20Files.txt');
  Multi:= MultiBetween(OldFileName, '(', ')');
  for I := 0 to High(Multi) do
  begin
    OldFileName := IncludePath + 'AeroLib\' + Multi[I];
    if FileExists(OldFileName) then
    begin
      DeleteFile(OldFileName);
      Reflect.Internals.Status('Removed file ' + Multi[I]);
    end;
  end;
end;

procedure SetupReflection;
var
  NewFile, I: Integer;
  OnlineVersion, NewFileName, ChangeLog: string;
  Multi: TStringArray;
  Toggle: Boolean;
begin
  Reflect.Internals.UpdateHooks;
  Reflect.Internals.CreateNewFiles;
  Reflect.Internals.DeleteOldFiles;
  if Reflect.Internals.CheckIncludeUpdate then
  begin
    Reflect.Internals.Status('Update Available!');
    ChangeLog := Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSRReflection/master/lib/internal/updating/ChangeLog.txt');
    NewFileName:= Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSR-Reflection/master/lib/internal/updating/Files.txt');
    Multi:= MultiBetween(NewFileName, '(', ')');
    for I := 0 to High(Multi) do
    begin
      if not(Toggle) then
      begin
        NewFileName := IncludePath + 'Aerolib\' + Multi[I];
        Toggle := True;
      end else
      begin
        try
          NewFile := Rewritefile(NewFileName, true);
          WriteFileString(NewFile, Reflect.Internals.GetPage(Multi[I]));
          Reflect.Internals.Status('Updated ' + NewFileName);
        except
            Reflect.Internals.Warn('Fatal error writing to ' + NewFileName, R_MAJOR);
        finally
          CloseFile(NewFile);
        end;
        Toggle:= False;
      end;
    end;
    try
      NewFileName := includePath + 'AeroLib\reflection\Reflection.simba';
      NewFile := Rewritefile(NewFileName, True);
      WriteFileString(NewFile, Reflect.Internals.GetPage('https://raw.githubusercontent.com/Elfyyy/OSR-Reflection/master/Reflection.Simba'));
      Reflect.Internals.Status('Updated ' + NewFileName);
    except
        Reflect.Internals.Warn('Fatal error writing to ' + NewFileName, R_MAJOR);
    finally
      CloseFile(NewFile);
      Writeln(ChangeLog);
      Reflect.Internals.Status('Update Completed.');
      Reflect.Internals.Status('Please Restart Script.');
      TerminateScript;
    end;
  end;
  Reflect.Internals.HooksValid;
  Reflect.Internals.SetupCurves;
  Reflect.Internals.Status('Reflection succesfully setup!');
end;
